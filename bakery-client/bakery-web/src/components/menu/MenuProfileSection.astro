---
import { Image } from 'astro:assets';
import type { User } from '../../env.d.ts';
import { inferRemoteSize } from 'astro:assets';

const isAuthenticated = false;

let user: User | null = null;
let validUrl: string | null = null;
let imageSize: { width: number; height: number } = {
  width: 0,
  height: 0,
};

if (isAuthenticated) {
  try {
  } catch (e) {
    user = null;
  }

  const imgUrl = '';
  try {
    const res = await fetch(imgUrl, { method: 'HEAD' });
    if (res.ok && res.headers.get('content-type')?.startsWith('image/')) {
      validUrl = imgUrl;
      imageSize = await inferRemoteSize(validUrl);
    }
  } catch (e) {
    validUrl = null;
  }
}

const { name } = user ?? { name: 'guest' };
---

<div class="flex w-full bg-slate-700">
  <div class="flex grow flex-col items-center justify-center gap-2 p-2">
    <div class="flex w-full flex-col items-start justify-center gap-1">
      <span>
        {
          validUrl ? (
            <Image
              src={validUrl}
              alt="profile.jpg"
              width={imageSize.width}
              height={imageSize.height}
              class="aspect-auto size-8 rounded-full p-1"
            />
          ) : (
            <div class="rounded-full bg-amber-950 p-2">
              <p>{`${name.at(0)?.toUpperCase()}${name.at(1)?.toUpperCase()}`}</p>
            </div>
          )
        }
      </span>
      <span><p class="text-base">{name}</p></span>
    </div>
    <!-- TODO: ADD AN ACCOUNT -->
  </div>
</div>
